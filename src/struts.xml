<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
        "http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>

    <constant name="struts.devMode" value="false"/>

    <package name="login" extends="json-default">

        <!-- 声明自定义拦截器对象 -->
        <interceptors>
            <!-- 声明登录拦截器 -->
            <interceptor name="loginCheck" class="com.lanou.intercrceptor.LoginInterceptor"/>

            <!-- 声明定义的拦截器 -->
            <interceptor name="addAndUpdate" class="com.lanou.intercrceptor.AddAndUpdateInterceptor"/>

            <!-- 声明一个拦截器集合, 将多个拦截器放在一个 stack 栈中 -->
            <interceptor-stack name="myInterceptorStack">

                <!-- 将登录拦截器加入自定义拦截器栈中 -->
                <interceptor-ref name="loginCheck">
                    <param name="excludeMethods">login</param>
                    <!--<param name="includeMethods">add,update</param>-->
                </interceptor-ref>

                <!-- 将自定义的拦截器加入自定义拦截器栈中 -->
                <interceptor-ref name="addAndUpdate">
                    <!--<param name="excludeMethods">login,changePassword,removeStaff,findAll,depart,departPaging,IdDepart,postPaging,post,IdPost,addCourse_type</param>-->
                    <param name="includeMethods">addDepart,addPost,addStaff,updateStaff</param>
                </interceptor-ref>


                <!-- 将 struts 提供的默认拦截器加入自定义拦截器栈中, 此种方式保证了原来 struts 提供的拦截器仍然好用
                    如果不加 defaultStack, 则使用自定义拦截器时原来的 struts的拦截器不好用了 -->
                <interceptor-ref name="defaultStack"/>

            </interceptor-stack>

        </interceptors>


        <!-- 给当前 package中的所有 action 动作都设置自定义拦截器, 即所有的 action 调用均会进入自定义拦截器 -->
        <default-interceptor-ref name="myInterceptorStack"/>

        <!-- 定义全局结果视图, 当返回 login 时, 跳转到登录页面 -->
        <global-results>
            <result name="login">/pages/login.jsp</result>
            <result name="error">/pages/frame/right.jsp</result>
        </global-results>


        <!--<action name="startCaptcha" class="geetestAction" method="startCaptcha">-->
        <!--<result name="success" type="json">-->
        <!--<param name="root">departments</param>-->
        <!--</result>-->
        <!--</action>-->

        <!--<action name="verifyLogin" class="geetestAction" method="verifyLogin">-->
        <!--<result name="success" type="json">-->
        <!--<param name="root">departments</param>-->
        <!--</result>-->
        <!--</action>-->

        <!--  登录查询 -->
        <action name="login" class="staffAction" method="login">
            <result name="success">/pages/frame.jsp</result>
            <result name="input">/pages/login.jsp</result>
            <result name="error">/pages/login.jsp</result>
        </action>

        <!-- 更改密码 -->
        <action name="changePassword" class="staffAction" method="changePassword">
            <result name="success">/pages/frame/right.jsp</result>
            <result name="input">/pages/staff/updPwd.jsp</result>
            <result name="error">/pages/login.jsp</result>
        </action>

        <!-- 重新登录 -->
        <action name="removeStaff" class="staffAction" method="removeStaff">
            <result name="success">/pages/login.jsp</result>
        </action>

        <!-- 查询全部员工信息 -->
        <action name="findAll" class="staffAction" method="findAll">
            <result name="success">/pages/staff/listStaff.jsp</result>
        </action>

        <!-- 增加一个部门, 之后接查询全部部门 -->
        <action name="addDepart" class="departmentAction" method="addDepart">
            <result name="success" type="chain">departPaging</result>
            <result name="input">/pages/department/addOrEditDepartment.jsp</result>
        </action>

        <!-- json语句, 查询全部部门 -->
        <action name="depart" class="departmentAction" method="findAll">
            <result name="success" type="json">
                <param name="root">departments</param>
            </result>
        </action>

        <!-- 正常查询全部部门 -->
        <action name="departFind" class="departmentAction" method="findDep">
            <result name="success">/pages/post/addOrEditPost.jsp</result>
        </action>

        <!-- 增加一个职务 -->
        <action name="addPost" class="postAction" method="addPost">
            <result name="success" type="chain">postPaging</result>
            <result name="input">/pages/post/addOrEditPost.jsp</result>
        </action>

        <!-- 查询全部部门, 分页输出 -->
        <action name="departPaging" class="departmentAction" method="findPaging">
            <result name="success">/pages/department/listDepartment.jsp</result>
        </action>

        <!-- 获得部门id, 查询部门全部信息 -->
        <action name="IdDepart" class="departmentAction" method="IdDepart">
            <result name="success">/pages/department/addOrEditDepartment.jsp</result>
        </action>

        <!-- 查询全部职务, 分页输出 -->
        <action name="postPaging" class="postAction" method="findPaging">
            <result name="success">/pages/post/listPost.jsp</result>
        </action>

        <!-- 未使用 ajax -->
        <action name="post" class="postAction" method="findAll">
            <result name="success" type="json">
                <param name="root">posts</param>
            </result>
        </action>

        <!-- 获得职务id, 并查询关于职务的所有信息 -->
        <action name="IdPost" class="postAction" method="IdPost">
            <result name="success">/pages/post/addOrEditPost.jsp</result>
        </action>

        <!-- 增加一个员工 -->
        <action name="addStaff" class="staffAction" method="addStaff">
            <result name="success" type="chain">findAll</result>
            <result name="input">/pages/staff/addStaff.jsp</result>
        </action>

        <!-- 通过id 查询员工 -->
        <action name="IdStaff" class="staffAction" method="IdStaff">
            <result name="success">/pages/staff/editStaff.jsp</result>
        </action>

        <!-- 更改一个员工 -->
        <action name="updateStaff" class="staffAction" method="updateStaff">
            <result name="success" type="chain">findAll</result>
            <result name="input">/pages/staff/editStaff.jsp</result>
            <!--<result name="error">/pages/staff/addStaff.jsp</result>-->
            <!--<result name="input">/pages/staff/addStaff.jsp</result>-->
        </action>

        <!-- ********************************************************* -->

        <!-- 增加一个课程表 -->
        <action name="addCourse_type" class="course_typeAction" method="addCourse_type">
            <result name="success" type="chain">coursePaging</result>
            <result name="input">/pages/coursetype/addOrEditCourse.jsp</result>
        </action>

        <!-- 课程表分页输出 -->
        <action name="coursePaging" class="course_typeAction" method="findCourse_Type">
            <result name="success">/pages/coursetype/listCourse.jsp</result>
            <result name="input">/pages/coursetype/listCourse.jsp</result>
        </action>

        <!-- 课程表更改 -->
        <action name="updateCourse_type" class="course_typeAction" method="updateCourse_type">
            <result name="success" type="chain">coursePaging</result>
        </action>

        <!-- 用 id 查询一个课程表 -->
        <action name="IdCourse" class="course_typeAction" method="IdCourse">
            <result name="success">/pages/coursetype/addOrEditCourse.jsp</result>
        </action>

        <!-- json语句, 查询全部课程表 -->
        <action name="findCourse" class="course_typeAction" method="findCourse">
            <result name="success" type="json">
                <param name="root">cou</param>
            </result>
        </action>

        <!-- 查询全部课程表 -->
        <action name="findC" class="course_typeAction" method="findCourse">
            <result name="success">/pages/classesm/addOrEditClass.jsp</result>
        </action>

        <!-- 查询全部班级 -->
        <action name="classesPaging" class="classesAction" method="classesPaging">
            <result name="success">/pages/classesm/listClass.jsp</result>
        </action>

        <!-- 添加一个班级 -->
        <action name="addClasses" class="classesAction" method="addClasses">
            <result name="success" type="chain">classesPaging</result>
        </action>

        <!-- 上传一个课程表 -->
        <action name="singleUpload" class="classesAction" method="singleUpload">

            <!-- 默写默认拦截器栈, 修改默认拦截器栈中的某个拦截器的属性 -->
            <interceptor-ref name="defaultStack">
                <!-- 重新设置上传文件的大小限制 -->
                <param name="fileUpload.maximumSize">10485760</param>
                <!-- 重新设置上传文件的后缀, 多个用逗号隔开 -->
                <param name="fileUpload.allowedExtensions">.jpg,.jpeg</param>
            </interceptor-ref>

            <result name="success" type="chain">classesPaging</result>
            <result name="input" type="chain">classesPaging</result>
        </action>

        <!-- 下载 -->
        <action name="download" class="classesAction" method="download">
            <result name="input" type="chain">classesPaging</result>
            <result name="success" type="stream">

                <!-- 动作类中输入流的属性名 -->
                <param name="inputStream">inputStream</param>

                <!-- 指定浏览器以何种形式下载, 以及文件名称 -->
                <param name="contentDisposition">attachment;filename=${filename}</param>

                <!-- 指定下载的文件的 MIME 类型 -->
                <param name="contentType">image/jpeg</param>

            </result>
        </action>

        <action name="IdClasses" class="classesAction" method="IdClasses">
            <result name="success">/pages/classesm/uploadClass.jsp</result>
        </action>


        <action name="findByStatus1" class="com.lanou.refer.action.ReferAction" method="findByPage1">
            <result name="success">/pages/refer/listRefer.jsp</result>
        </action>

        <action name="findByStatus2" class="com.lanou.refer.action.ReferAction" method="findByPage2">
            <result name="success">/pages/refer/listRefer.jsp</result>
        </action>

        <action name="add" class="com.lanou.refer.action.ReferAction" method="add">
            <result name="success" type="chain">findByStatus1</result>
            <result name="input">/pages/refer/addRefer.jsp</result>
        </action>

        <action name="findCourseJson" class="com.lanou.teach.action.Course_typeAction" method="findCourse">
            <result name="success" type="json">
                <param name="root">courseTypes</param>
            </result>
        </action>

        <action name="findClassJson" class="com.lanou.teach.action.ClassesAction" method="findByCourse">
            <result name="success" type="json">
                <param name="root">classesList</param>
            </result>
        </action>


    </package>

    <package name="crm_refer" extends="json-default" namespace="/refer">
        <!-- 操作权限拦截器 -->
        <interceptors>
            <interceptor name="referInterceptor" class="com.lanou.refer.interceptor.ReferInterceptor"/>
            <interceptor-stack name="myInterceptorStack">
                <interceptor-ref name="referInterceptor">
                    <param name="excludeMethods">login,findByPage1,findByPage2</param>
                </interceptor-ref>
                <interceptor-ref name="defaultStack"/>
            </interceptor-stack>
        </interceptors>
        <!-- 给当前package中所有的action添加自定义拦截器 -->
        <default-interceptor-ref name="myInterceptorStack"/>
        <!-- 定义全局结果集 -->
        <global-results>
            <result name="permissions">/pages/error.jsp</result>
        </global-results>

        <action name="findByStatus1" class="com.lanou.refer.action.ReferAction" method="findByPage1">
            <result name="success">/pages/refer/listRefer.jsp</result>
        </action>

        <action name="findByStatus2" class="com.lanou.refer.action.ReferAction" method="findByPage2">
            <result name="success">/pages/refer/listRefer.jsp</result>
        </action>

        <action name="add" class="com.lanou.refer.action.ReferAction" method="add">
            <result name="success" type="chain">findByStatus1</result>
            <result name="input">/pages/refer/addRefer.jsp</result>
        </action>

        <action name="findCourseJson" class="com.lanou.teach.action.Course_typeAction" method="findCourse">
            <result name="success" type="json">
                <param name="root">courseTypes</param>
            </result>
        </action>

        <action name="findClassJson" class="com.lanou.teach.action.ClassesAction" method="findByCourse">
            <result name="success" type="json">
                <param name="root">classesList</param>
            </result>
        </action>

        <action name="showRefer" class="com.lanou.refer.action.ReferAction" method="show">
            <result name="success">/pages/refer/showRefer.jsp</result>
        </action>

        <action name="showReferEdit" class="com.lanou.refer.action.ReferAction" method="findByEdit">
            <result name="success">/pages/refer/editRefer.jsp</result>
        </action>

        <action name="updateRefer" class="com.lanou.refer.action.ReferAction" method="update">
            <result name="success">/pages/success.jsp</result>
        </action>

        <action name="findSingle" class="com.lanou.refer.action.FollowAction" method="findSingle">
            <result name="success">/pages/follow/addOrEditFollow.jsp</result>
        </action>

        <action name="addFollow" class="com.lanou.refer.action.FollowAction" method="addFollow">
            <result name="success">/pages/success.jsp</result>
        </action>

        <action name="findByCD" class="com.lanou.refer.action.ReferAction" method="findByCD">
            <result name="success">/pages/refer/listRefer.jsp</result>
        </action>
    </package>
</struts>
